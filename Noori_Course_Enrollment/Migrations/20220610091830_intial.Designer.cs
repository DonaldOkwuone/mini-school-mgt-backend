// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Noori_Course_Enrollment.Data;

#nullable disable

namespace Noori_Course_Enrollment.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220610091830_intial")]
    partial class intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Noori_Course_Enrollment.Model.Noori_Course", b =>
                {
                    b.Property<int>("Noori_CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Noori_CourseID"), 1L, 1);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseProfessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Noori_DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Score")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Noori_CourseID");

                    b.HasIndex("Noori_DepartmentID");

                    b.ToTable("noori_courses");
                });

            modelBuilder.Entity("Noori_Course_Enrollment.Model.Noori_Department", b =>
                {
                    b.Property<int>("Noori_DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Noori_DepartmentID"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Noori_SchoolID")
                        .HasColumnType("int");

                    b.HasKey("Noori_DepartmentID");

                    b.HasIndex("Noori_SchoolID");

                    b.ToTable("noori_departments");
                });

            modelBuilder.Entity("Noori_Course_Enrollment.Model.Noori_Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("noori_levels");
                });

            modelBuilder.Entity("Noori_Course_Enrollment.Model.Noori_School", b =>
                {
                    b.Property<int>("Noori_SchoolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Noori_SchoolID"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViceChancellor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Noori_SchoolID");

                    b.ToTable("noori_schools");
                });

            modelBuilder.Entity("Noori_Course_Enrollment.Model.Noori_Student", b =>
                {
                    b.Property<int>("Noori_StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Noori_StudentID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("Noori_DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Noori_StudentID");

                    b.HasIndex("Noori_DepartmentID");

                    b.ToTable("noori_students");
                });

            modelBuilder.Entity("Noori_Course_Enrollment.Model.Noori_Student_Registration", b =>
                {
                    b.Property<int>("Noori_Student_RegistrationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Noori_Student_RegistrationID"), 1L, 1);

                    b.Property<int>("Noori_CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Noori_Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Noori_StudentID")
                        .HasColumnType("int");

                    b.HasKey("Noori_Student_RegistrationID");

                    b.HasIndex("Noori_CourseID");

                    b.HasIndex("Noori_StudentID");

                    b.ToTable("Noori_Student_Registrations");
                });

            modelBuilder.Entity("Noori_Course_Enrollment.Model.Noori_Course", b =>
                {
                    b.HasOne("Noori_Course_Enrollment.Model.Noori_Department", null)
                        .WithMany("Noori_Course")
                        .HasForeignKey("Noori_DepartmentID");
                });

            modelBuilder.Entity("Noori_Course_Enrollment.Model.Noori_Department", b =>
                {
                    b.HasOne("Noori_Course_Enrollment.Model.Noori_School", "Noori_School")
                        .WithMany("Noori_Departments")
                        .HasForeignKey("Noori_SchoolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Noori_School");
                });

            modelBuilder.Entity("Noori_Course_Enrollment.Model.Noori_Student", b =>
                {
                    b.HasOne("Noori_Course_Enrollment.Model.Noori_Department", "Noori_Department")
                        .WithMany()
                        .HasForeignKey("Noori_DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Noori_Department");
                });

            modelBuilder.Entity("Noori_Course_Enrollment.Model.Noori_Student_Registration", b =>
                {
                    b.HasOne("Noori_Course_Enrollment.Model.Noori_Course", "Noori_Course")
                        .WithMany()
                        .HasForeignKey("Noori_CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noori_Course_Enrollment.Model.Noori_Student", "Noori_Student")
                        .WithMany()
                        .HasForeignKey("Noori_StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Noori_Course");

                    b.Navigation("Noori_Student");
                });

            modelBuilder.Entity("Noori_Course_Enrollment.Model.Noori_Department", b =>
                {
                    b.Navigation("Noori_Course");
                });

            modelBuilder.Entity("Noori_Course_Enrollment.Model.Noori_School", b =>
                {
                    b.Navigation("Noori_Departments");
                });
#pragma warning restore 612, 618
        }
    }
}
